user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  # ——— upstreamy ———
  upstream frontend_service {
    server frontend:3000;
  }
  upstream backend_service {
    server backend:8000;
  }

  server {
    listen 80;
    server_name _;

    # 1) /static/* → proxy do Django/WhiteNoise
    location ^~ /static/ {
      proxy_pass         http://backend_service;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_connect_timeout  5s;
      proxy_read_timeout     60s;
    }

    # 2) exact /admin → przekieruj na /admin/
    location = /admin {
      return 301 /admin/;
    }
    # 3) /admin/* → Django Admin
    location ^~ /admin/ {
      proxy_pass         http://backend_service;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # 4) exact /api → przekieruj na /api/
    location = /api {
      return 301 /api/;
    }
    # 5) /api/* → REST API
    location ^~ /api/ {
      proxy_pass         http://backend_service;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # 6) wszystko inne → Vue Dev Server
    location / {
      proxy_pass         http://frontend_service;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade           $http_upgrade;
      proxy_set_header   Connection        "upgrade";
      proxy_set_header   Host              $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}
